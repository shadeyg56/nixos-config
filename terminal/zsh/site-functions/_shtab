#compdef shtab

# AUTOMATICALLY GENERATED by `shtab`


_shtab_shtab_commands() {
  local _commands=(
    
  )
  _describe 'shtab commands' _commands
}

_shtab_shtab_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)--version[show program\'s version number and exit]"
  {-s,--shell}"[]:shell:(bash zsh tcsh)"
  "--prefix[prepended to generated functions to avoid clashes]:prefix:"
  "--preamble[prepended to generated script]:preamble:"
  "--prog[custom program name (overrides \`parser.prog\`)]:prog:"
  {-u,--error-unimportable}"[raise errors if \`parser\` is not found in \$PYTHONPATH]"
  "--verbose[Log debug information]"
  "(- : *)--print-own-completion[print shtab\'s own completion]:print_own_completion:(bash zsh tcsh)"
  ":importable parser (or function returning parser):"
)


_shtab_shtab() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_shtab_options[(I)${(q)one_or_more}*]} + ${_shtab_shtab_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_shtab_options+=(': :_shtab_shtab_commands' '*::: :->shtab')
  fi
  _arguments -C $_shtab_shtab_options

  case $state in
    shtab)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_shtab-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args
_shtab_shtab "$@"
